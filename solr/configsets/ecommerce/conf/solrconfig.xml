<?xml version="1.0" ?>


<!-- Minimal solrconfig.xml with /select, /admin and /update only -->

<config>

  <codecFactory class="solr.SchemaCodecFactory"/>

  <!-- Load the Querqy Jar that comes with all it's dependencies -->
  <lib dir="/opt/querqy/lib/" />

  <dataDir>${solr.data.dir:}</dataDir>

  <directoryFactory name="DirectoryFactory"
                    class="${solr.directoryFactory:solr.NRTCachingDirectoryFactory}"/>
  <schemaFactory class="ManagedIndexSchemaFactory"/>

  <luceneMatchVersion>8.9</luceneMatchVersion>

  <updateHandler class="solr.DirectUpdateHandler2">
    <commitWithin>
      <softCommit>${solr.commitwithin.softcommit:true}</softCommit>
    </commitWithin>
    <updateLog>
      <str name="dir">${solr.ulog.dir:}</str>
      <int name="numVersionBuckets">${solr.ulog.numVersionBuckets:65536}</int>
    </updateLog>
  </updateHandler>

  <queryParser name="querqy" class="querqy.solr.QuerqyDismaxQParserPlugin">
    <bool name="skipUnknownRewriters">true</bool>
    <lst name="infoLogging">
      <!--
        Define a 'sink' named 'responseSink' to which the logging information
        will be sent:
      -->
      <lst name="sink">
        <str name="id">responseSink</str>
        <str name="class">querqy.solr.ResponseSink</str>
      </lst>

      <!--
        Send the logging information from rewriter 'replace_prelive' to sink
        'responseSink':
      -->
      <lst name="mapping">
        <str name="rewriter">replace_prelive</str>
        <str name="sink">responseSink</str>
      </lst>
      <!--
        Send the logging information from rewriter 'replace' to sink
        'responseSink':
      -->
      <lst name="mapping">
        <str name="rewriter">replace</str>
        <str name="sink">responseSink</str>
      </lst>

      <!--
        Send the logging information from rewriter 'common_rules_prelive' to sink
        'responseSink' too:
      -->
      <lst name="mapping">
        <str name="rewriter">common_rules_prelive</str>
        <str name="sink">responseSink</str>
      </lst>
      <!--
        Send the logging information from rewriter 'common_rules' to sink
        'responseSink' too:
      -->
      <lst name="mapping">
        <str name="rewriter">common_rules</str>
        <str name="sink">responseSink</str>
      </lst>

      <!--
        Send the logging information from rewriter 'regex' to sink
        'responseSink' as well:
      -->
      <lst name="mapping">
        <str name="rewriter">regex_screen_protectors</str>
        <str name="sink">responseSink</str>
      </lst>
    </lst>
  </queryParser>


  <!-- Override the default QueryComponent -->
  <searchComponent name="query" class="querqy.solr.QuerqyQueryComponent"/>

  <!--
    Add the Querqy request handler.
  -->
  <requestHandler name="/querqy/rewriter" class="querqy.solr.QuerqyRewriterRequestHandler"/>

  <!-- Used in the Solr Admin UI -->
  <requestHandler name="/select" class="solr.SearchHandler">
    <!-- We use the useParams= parameter with ParamSets to manage our relevance algorithems -->
    <lst name="defaults">
      <str name="echoParams">all</str>
      <str name="indent">true</str>
      <!-- we actually don't want to use the default field -->
      <str name="df">id</str>
      <str name="qf">id name title product_type short_description ean search_attributes</str>
      <str name="defType">edismax</str>
      <str name="tie">0.01</str>
      <!-- setup default rewriters if you do defType=querqy -->
      <!--str name="querqy.rewriters">replace,common_rules,regex_screen_protectors</str-->
    </lst>
    <lst name="appends">
      <!-- Lets not filter out the data if we don't need to at this  -->
      <!--str name="fq">price:*</str-->
      <!--str name="fq">-img_500x500:""</str-->
    </lst>
  </requestHandler>

  <!-- Used by the Blacklight Front End App -->
  <requestHandler name="/blacklight" class="solr.SearchHandler" useParams="visible_products">
    <lst name="defaults">
      <str name="echoParams">explicit</str>
      <str name="indent">true</str>
      <!-- we actually don't want to use the default field -->
      <str name="df">id</str>
      <str name="qf">id name title product_type short_description ean search_attributes</str>
      <str name="defType">edismax</str>
      <str name="tie">0.01</str>

      <!-- setup default rewriters if you do defType=querqy -->
      <!--str name="querqy.rewriters">replace,common_rules,regex_screen_protectors</str-->

      <!-- spellchecking -->
      <str name="spellcheck">true</str>
      <str name="spellcheck.dictionary">title</str>
      <str name="spellcheck.onlyMorePopular">true</str>
      <str name="spellcheck.extendedResults">true</str>
      <str name="spellcheck.collate">true</str>
      <str name="spellcheck.maxCollations">100</str>
      <str name="spellcheck.maxCollationTries">5</str>
      <str name="spellcheck.count">5</str>
      <!-- filter out any collations that don't match documents -->
      <str name="spellcheck.collateParam.mm">100%</str>

    </lst>
    <lst name="appends">
    </lst>
    <arr name="last-components">
      <str>spellcheck</str>
    </arr>
  </requestHandler>

  <searchComponent name="suggest" class="solr.SuggestComponent">
    <lst name="suggester">
      <str name="name">mySuggester</str>
      <str name="lookupImpl">FuzzyLookupFactory</str>
      <str name="suggestAnalyzerFieldType">text_general</str>
      <str name="buildOnCommit">true</str>
      <str name="field">suggestions</str>
    </lst>
  </searchComponent>

  <requestHandler name="/suggest" class="solr.SearchHandler" startup="lazy">
    <lst name="defaults">
      <str name="suggest">true</str>
      <str name="suggest.count">5</str>
      <str name="suggest.dictionary">mySuggester</str>
    </lst>
    <arr name="components">
      <str>suggest</str>
    </arr>
  </requestHandler>

  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
    <str name="queryAnalyzerFieldType">textSpell</str>
    <!-- Multiple "Spell Checkers" can be declared and used by this component
      (e.g. for title_spell field)
      -->
    <lst name="spellchecker">
      <str name="name">title</str>
      <str name="field">title</str>
      <str name="spellcheckIndexDir">./spell_title</str>
      <str name="accuracy">0.7</str>
      <str name="buildOnCommit">true</str>
      <str name="buildOnOptimize">true</str>
    </lst>
  </searchComponent>


  <!-- This is required to support the legacy behavior of the parameter qt=/query-select -->
  <requestDispatcher handleSelect="true" >
    <!--
    bump up the upload amount to allow us to use the Solr Admin UI to upload the .json data,
    with room to grow.
    -->
    <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="512000" />
  </requestDispatcher>

  <queryResponseWriter name="json" class="solr.JSONResponseWriter">
    <str name="content-type">text/javascript; charset=UTF-8</str>
  </queryResponseWriter>


</config>

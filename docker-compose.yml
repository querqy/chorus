version: '3'
services:

  blacklight:
    container_name: blacklight
    build:
      context: ./blacklight
      dockerfile: Dockerfile
    volumes:
      - ./blacklight/app:/app/app
    ports:
      - 4000:3000
      - 9394:9394
    command: "foreman s -f Procfile"
    environment:
      - SOLR_URL=http://${SOLR_USER}:${SOLR_PASSWORD}@solr1:8983/solr/ecommerce
      - PORT=3000
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - solr1
    #  - jaeger

  mysql:
    container_name: mysql
    image: mysql:8.3.0
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password --execute \"SHOW DATABASES;\""
      interval: 10s
      timeout: 30s

  smui:
    container_name: smui
    build:
      context: ./smui
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    environment:
      - SMUI_HEADLINE=Chorus SMUI
      - SMUI_DB_URL=jdbc:mysql://mysql:3306/smui?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - SMUI_DB_USER=root
      - SMUI_DB_PASSWORD=${SMUI_DB_PASSWORD}
      - SMUI_DEPLOY_PRELIVE_SOLR_HOST=${SOLR_USER}:${SOLR_PASSWORD}@solr1:8983
      - SMUI_2SOLR_SOLR_HOST=${SOLR_USER}:${SOLR_PASSWORD}@solr1:8983
      - SMUI_TOGGLE_DEPL_PRELIVE=true
      - SMUI_TOGGLE_SPELLING=true
      - SMUI_TOGGLE_DEPL_CUSTOM_SCRIPT=true
      - SMUI_TOGGLE_DEPL_CUSTOM_SCRIPT_PATH=/smui/conf/smui2solrcloud.sh
      - SMUI_DEPLOY_PRELIVE_FN_RULES_TXT=/configs/ecommerce/rules.txt
      - SMUI_DEPLOY_PRELIVE_FN_REPLACE_TXT=/configs/ecommerce/replace-rules.txt
      - SMUI_TOGGLE_RULE_ID_LOGGING=true
      - SMUI_TOGGLE_EVENTHISTORY=true
      - SMUI_RULE_TAGGING_ACTIVE=true
      - SMUI_PREDEFINED_TAGS_FILE=/smui/conf/predefined_tags.json
    depends_on:
      - mysql

  solr1:
    container_name: solr1
    build: ./solr
    ports:
     - "8983:8983"
    environment:
      - SOLR_OPTS=-XX:-UseLargePages
      - SOLR_HEAP=1g
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
      - JAEGER_SERVICE_NAME=solr1  # not working ;-(
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=${JAEGER_SAMPLER_PARAM}
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=5775
      - "SOLR_OPTS=-Dsolr.auth.jwt.allowOutboundHttp=true -Dsolr.modules=jwt-auth,jaegertracer-configurator"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - keycloak

  solr2:
    container_name: solr2
    build: ./solr
    ports:
     - "8984:8983"
    environment:
      - SOLR_OPTS=-XX:-UseLargePages
      - SOLR_HEAP=1g
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
      - JAEGER_SERVICE_NAME=solr2
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=${JAEGER_SAMPLER_PARAM}
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=5775
      - "SOLR_OPTS=-Dsolr.auth.jwt.allowOutboundHttp=true -Dsolr.modules=jwt-auth,jaegertracer-configurator"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - keycloak

  solr3:
    container_name: solr3
    build: ./solr
    ports:
     - "8985:8983"
    environment:
      - SOLR_OPTS=-XX:-UseLargePages
      - SOLR_HEAP=1g
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
      - JAEGER_SERVICE_NAME=solr3
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=${JAEGER_SAMPLER_PARAM}
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=5775
      - "SOLR_OPTS=-Dsolr.auth.jwt.allowOutboundHttp=true -Dsolr.modules=jwt-auth,jaegertracer-configurator"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - keycloak

  zoo1:
    image: zookeeper:3.7.0
    container_name: zoo1
    hostname: zoo1
    ports:
      - 2181:2181
      - 7001:7000
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"


  zoo2:
    image: zookeeper:3.7.0
    container_name: zoo2
    hostname: zoo2
    ports:
      - 2182:2181
      - 7002:7000
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"


  zoo3:
    image: zookeeper:3.7.0
    container_name: zoo3
    hostname: zoo3
    ports:
      - 2183:2181
      - 7003:7000
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr,conf,ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"

  redis:
    container_name: quepid_redis
    image: redis:6.2.7-alpine
    ports:
      - 6379:6379

  quepid:
    container_name: quepid
    image: o19s/quepid:7.15.1
    ports:
      - 3000:3000
    command: "foreman s -f Procfile"
    environment:
      - PORT=3000
      - RACK_ENV=production
      - RAILS_ENV=production
      - DATABASE_URL=mysql2://root:${MYSQL_ROOT_PASSWORD}@mysql:3306/quepid
      - REDIS_URL=redis://redis:6379/1
      - FORCE_SSL=false
      - MAX_THREADS=2
      - WEB_CONCURRENCY=2
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - SECRET_KEY_BASE=chorus_key
      - TC_URL=
      - PRIVACY_URL=
      - COOKIES_URL=
      - EMAIL_MARKETING_MODE=false
      - EMAIL_PROVIDER=
      - QUEPID_DEFAULT_SCORER=AP@10
      - KEYCLOAK_REALM=chorus
      - KEYCLOAK_SITE=http://keycloak:9080
      - SIGNUP_ENABLED=true
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis

  embeddings:
    container_name: embeddings
    build:
      context: ./embeddings
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OMP_NUM_THREADS=1
    deploy:
      resources:
        limits:
          memory: 10G
        reservations:
          memory: 512M


  solr-exporter:
    image: solr:9.1.1
    container_name: solr-exporter
    hostname: solr-exporter
    ports:
     - 9854:9854
    command: /bin/bash -c "/usr/bin/wait-for-http-200.sh; export JAVA_OPTS='-Dsolr.httpclient.builder.factory=org.apache.solr.client.solrj.impl.PreemptiveBasicAuthClientBuilderFactory -Dsolr.httpclient.config=/home/basicauth.properties'; ./contrib/prometheus-exporter/bin/solr-exporter -p 9854 -z zoo1:2181,zoo2:2181,zoo3:2181 -f ./contrib/prometheus-exporter/conf/solr-exporter-config.xml -n 8 -s 15"
    volumes:
      - ./solr-exporter/wait-for-http-200.sh:/usr/bin/wait-for-http-200.sh
      - ./solr-exporter/basicauth.properties:/home/basicauth.properties
    depends_on:
      - solr1
      - solr2
      - solr3

  prometheus:
    image: prom/prometheus:v2.32.1
    container_name: prometheus
    restart: always
    hostname: prometheus
    healthcheck:
      test: ["CMD", "wget", "--tries=1", "--spider", "http://localhost:9090"]
      interval: 5s
      timeout: 10s
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus/:/etc/prometheus/

  grafana:
    image: grafana/grafana:7.5.17
    container_name: grafana
    restart: unless-stopped
    hostname: grafana
    healthcheck:
      test: ["CMD", "wget", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 5s
      timeout: 10s
    ports:
      - 9091:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=true
    depends_on:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:1.39
    container_name: jaeger
    restart: always
    hostname: jaegertracing
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true

  keycloak:
    image: chorus-keycloak
    container_name: keycloak
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    command: start --optimized --import-realm
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
    ports:
      - 9080:9080
    environment:
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=9080
      - KC_HOSTNAME=keycloak
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - DB_VENDOR=h2

version: '3'   # on CircleCI the version and services cause build to puke.
services:

  blacklight:
    container_name: blacklight
    build:
      context: ./blacklight
      dockerfile: Dockerfile
    volumes:
      - ./blacklight/app:/app/app
    ports:
      - 4000:3000
      - 9394:9394
    command: "foreman s -f Procfile"
    environment:
      - SOLR_URL=http://solr1:8983/solr/ecommerce
      - PORT=3000
    depends_on:
      - solr1

  mysql:
    container_name: mysql
    image: mysql:5.7.29
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql

  smui:
    container_name: smui
    build:
      context: ./smui
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    environment:
      - SMUI_DB_URL=jdbc:mysql://mysql:3306/smui?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - SMUI_DB_USER=root
      - SMUI_DB_PASSWORD=password
      - SMUI_DEPLOY_PRELIVE_SOLR_HOST=solr1:8983
      - SMUI_TOGGLE_DEPL_CUSTOM_SCRIPT=true
      - SMUI_TOGGLE_DEPL_CUSTOM_SCRIPT_PATH=/smui/conf/smui2solrcloud.sh
      - SMUI_DEPLOY_PRELIVE_FN_RULES_TXT=/configs/ecommerce/rules.txt
      - SMUI_TOGGLE_SPELLING=true
      - SMUI_DEPLOY_PRELIVE_FN_REPLACE_TXT=/configs/ecommerce/replace-rules.txt
      - SMUI_TOGGLE_RULE_ID_LOGGING=true
      - SMUI_HEADLINE=Chorus SMUI
      - SMUI_TOGGLE_EVENTHISTORY=true
    depends_on:
      - mysql

  solr1:
    container_name: solr1
    build: ./solr
    ports:
     - "8983:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - ./volumes/fake_shared_fs:/tmp/fake_shared_fs
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  solr2:
    container_name: solr2
    build: ./solr
    ports:
     - "8984:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - ./volumes/fake_shared_fs:/tmp/fake_shared_fs
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  solr3:
    container_name: solr3
    build: ./solr
    ports:
     - "8985:8983"
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - ./volumes/fake_shared_fs:/tmp/fake_shared_fs
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  zoo1:
    image: zookeeper:3.6.2
    container_name: zoo1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 7000:7000
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"


  zoo2:
    image: zookeeper:3.6.2
    container_name: zoo2
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
      - 7001:7000
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"


  zoo3:
    image: zookeeper:3.6.2
    container_name: zoo3
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
      - 7002:7000
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr,conf,ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"


  redis:
    container_name: quepid_redis
    image: redis:6.0.5-alpine
    ports:
      - 6379:6379

  quepid:
    container_name: quepid
    image: o19s/quepid:6.4.1
    ports:
      - 3000:3000
    command: "foreman s -f Procfile"
    environment:
      - PORT=3000
      - RACK_ENV=production
      - RAILS_ENV=production
      - DATABASE_URL=mysql2://root:password@mysql:3306/quepid
      - REDIS_URL=redis://redis:6379/1
      - FORCE_SSL=false
      - MAX_THREADS=2
      - WEB_CONCURRENCY=2
      - SECRET_KEY_BASE=chorus_key
      - TC_URL=
      - PRIVACY_URL=
      - COOKIES_URL=
      - EMAIL_MARKETING_MODE=false
      - QUEPID_DEFAULT_SCORER=DCG@10
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis

  rre:
    container_name: rre
    build:
      context: ./rre
      dockerfile: Dockerfile
    volumes:
      - ./rre:/rre
    ports:
      - "7979:8080"
    command: "java -jar rre-server-1.1.jar"
    environment:
      - SOLR_URL=http://solr1:8983/solr/ecommerce
    depends_on:
      - solr1

  quaerite:
    container_name: quaerite
    image: rhapsode/quaerite:latest
    #build:
    #  context: ./rre
    #  dockerfile: Dockerfile
    volumes:
      - ./quaerite:/quaerite
    #ports:
    #  - "7979:8080"
    #command: "java -jar rre-server-1.1.jar"
    #environment:
    #  - SOLR_URL=http://solr1:8983/solr/ecommerce
    depends_on:
      - solr1

  solr-exporter:
    image: solr:8.7.0
    container_name: solr-exporter
    hostname: solr-exporter
    ports:
     - 9854:9854
    command: /bin/bash -c "/usr/bin/wait-for-http-200.sh; ./contrib/prometheus-exporter/bin/solr-exporter -p 9854 -z zoo1:2181,zoo2:2181,zoo3:2181 -f ./contrib/prometheus-exporter/conf/solr-exporter-config.xml -n 8 -s 15"
    volumes:
      - ./solr-exporter/wait-for-http-200.sh:/usr/bin/wait-for-http-200.sh
    depends_on:
      - solr1
      - solr2
      - solr3

  prometheus:
    image: prom/prometheus:v2.22.0
    container_name: prometheus
    restart: always
    hostname: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus/:/etc/prometheus/

  grafana:
    image: grafana/grafana:7.2.1
    container_name: grafana
    restart: always
    hostname: grafana
    ports:
      - 9091:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=true
    depends_on:
      - prometheus


volumes:
    mysql_data: {}
